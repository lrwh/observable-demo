#log4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector

#-Djavaagent:/home/liurui/agent/opentelemetry-javaagent-1.26.1-guance.jar
#-javaagent:/home/liurui/code/opentelemetry-java-instrumentation/javaagent/build/libs/opentelemetry-javaagent-1.31.0.jar
#-Dotel.traces.exporter=otlp
#-Dotel.exporter.otlp.protocol=grpc
#-Dotel.exporter.otlp.endpoint=http://localhost:4317
#-Dotel.resource.attributes=service.name=springboot
#-Dotel.propagators=xray
#
#-Djavaagent:/home/liurui/agent/dd-java-agent-1.30.1-guance.jar
#-javaagent:/home/liurui/code/dd-trace-java/dd-java-agent/build/libs/dd-java-agent-1.34.0-guance.jar
#-Ddd.service.name=springboot
#-Ddd.trace.debug=true
#-Ddd.trace.agent.port=9529
#-Ddatadog.slf4j.simpleLogger.logFile=/home/liurui/server.ddtrace.log
#-Ddd.trace.headers.enabled=true
#-Ddatadog.slf4j.simpleLogger.logLevel=debug
#-Xmx500m
#-Ddd.propagation.extract.log_header_names.enabled=true
#-Ddd.log4j2.trace.async.pattern=" dd.service dd.trace_id dd.span_id "


#2024-06-04 17:29:08,230 main WARN org.apache.commons.logging.LogAdapter$Log4jLog caught java.lang.RuntimeException logging SimpleMessage: Application run failed java.lang.RuntimeException: Calls to this method will be rewritten by Instrumentation Context Provider (e.g. FieldBackedProvider)
#    at datadog.trace.bootstrap.InstrumentationContext.get(InstrumentationContext.java:26)
#    at org.apache.logging.log4j.core.async.RingBufferLogEvent.setMessage(RingBufferLogEvent.java:128)
#    at org.apache.logging.log4j.core.async.RingBufferLogEvent.setValues(RingBufferLogEvent.java:100)
#    at org.apache.logging.log4j.core.async.RingBufferLogEventTranslator.translateTo(RingBufferLogEventTranslator.java:60)
#    at org.apache.logging.log4j.core.async.RingBufferLogEventTranslator.translateTo(RingBufferLogEventTranslator.java:37)
#    at com.lmax.disruptor.RingBuffer.translateAndPublish(RingBuffer.java:962)
#    at com.lmax.disruptor.RingBuffer.tryPublishEvent(RingBuffer.java:478)
#    at org.apache.logging.log4j.core.async.AsyncLoggerDisruptor.tryPublish(AsyncLoggerDisruptor.java:221)
#    at org.apache.logging.log4j.core.async.AsyncLogger.publish(AsyncLogger.java:229)
#    at org.apache.logging.log4j.core.async.AsyncLogger.logWithThreadLocalTranslator(AsyncLogger.java:225)
#    at org.apache.logging.log4j.core.async.AsyncLogger.access$000(AsyncLogger.java:67)
#    at org.apache.logging.log4j.core.async.AsyncLogger$1.log(AsyncLogger.java:152)